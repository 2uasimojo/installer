# Required Python packages:
#
# ansible
# openstackclient
# openstacksdk
# netaddr

- ansible.builtin.import_playbook: common.yaml

- hosts: all
  gather_facts: no

  tasks:
  - name: 'Create the primary cluster network'
    openstack.cloud.network:
      name: "{{ os_network }}"

  - name: 'Set tags on the  primary cluster network'
    ansible.builtin.command:
      cmd: "openstack network set --tag {{ primary_cluster_network_tag }} --tag {{ cluster_id_tag }} {{ os_network }}"

  - name: 'Create the primary cluster subnet'
    openstack.cloud.subnet:
      name: "{{ os_subnet }}"
      network_name: "{{ os_network }}"
      cidr: "{{ os_subnet_range }}"
      allocation_pool_start: "{{ os_subnet_range | ansible.utils.next_nth_usable(10) }}"
      allocation_pool_end: "{{ os_subnet_range | ansible.utils.ipaddr('last_usable') }}"
      dns_nameservers: "{{ os_external_dns }}"

  - name: 'Set tags on  primary cluster subnet'
    ansible.builtin.command:
      cmd: "openstack subnet set --tag {{ cluster_id_tag }} {{ os_subnet }}"

  - name: 'Create external router'
    openstack.cloud.router:
      name: "{{ os_router }}"
      network: "{{ os_external_network }}"
      interfaces:
      - "{{ os_subnet }}"
    when: os_external_network is defined and os_external_network|length>0

  - name: 'Set external router tag'
    ansible.builtin.command:
      cmd: "openstack router set --tag {{ cluster_id_tag }} {{ os_router }}"
    when: os_external_network is defined and os_external_network|length>0

  - name: 'Create the API port'
    openstack.cloud.port:
      name: "{{ os_port_api }}"
      network: "{{ os_network }}"
      security_groups:
      - "{{ os_sg_master }}"
      fixed_ips:
      - subnet: "{{ os_subnet }}"
        ip_address: "{{ os_apiVIP }}"

  - name: 'Set API port tag'
    ansible.builtin.command:
      cmd: "openstack port set --tag {{ cluster_id_tag }} {{ os_port_api }}"

  - name: 'Create the Ingress port'
    openstack.cloud.port:
      name: "{{ os_port_ingress }}"
      network: "{{ os_network }}"
      security_groups:
      - "{{ os_sg_worker }}"
      fixed_ips:
      - subnet: "{{ os_subnet }}"
        ip_address: "{{ os_ingressVIP }}"

  - name: 'Set the Ingress port tag'
    ansible.builtin.command:
      cmd: "openstack port set --tag {{ cluster_id_tag }} {{ os_port_ingress }}"

  # NOTE: openstack ansible module doesn't allow attaching Floating IPs to
  # ports, let's use the CLI instead
  - name: 'Attach the API floating IP to API port'
    ansible.builtin.command:
      cmd: "openstack floating ip set --port {{ os_port_api }} {{ os_api_fip }}"
    when: os_api_fip is defined and os_api_fip|length>0

  # NOTE: openstack ansible module doesn't allow attaching Floating IPs to
  # ports, let's use the CLI instead
  - name: 'Attach the Ingress floating IP to Ingress port'
    ansible.builtin.command:
      cmd: "openstack floating ip set --port {{ os_port_ingress }} {{ os_ingress_fip }}"
    when: os_ingress_fip is defined and os_ingress_fip|length>0
