#!/bin/bash
set -ex

# First we stop any previously started containers, because ExecStop only runs when the ExecStart process
# e.g this script is still running, but we exit if *any* of the containers exits unexpectedly
for name in ironic ironic-inspector httpd; do
    podman ps | grep -w "$name$" && podman kill $name
    podman ps --all | grep -w "$name$" && podman rm $name -f
done

IRONIC_SHARED_VOLUME="systemd-ironic"

# Apparently network-online doesn't necessarily mean iptables is ready, so wait until it is..
while ! iptables -L; do
  sleep 1
done

# Start dnsmasq, http, and ironic containers using same image
# Currently we do this outside of a pod because we need to ensure the images
# are downloaded before starting the API pods

podman run -d --net host --name httpd \
     --restart on-failure \
     --env IRONIC_RAMDISK_SSH_KEY="$IRONIC_RAMDISK_SSH_KEY" \
     --env PROVISIONING_INTERFACE \
     --env HTTP_PORT=$HTTP_PORT \
     -v $IRONIC_SHARED_VOLUME:/shared:z --entrypoint /bin/runhttpd ${IRONIC_IMAGE}

# Add firewall rules to ensure the IPA ramdisk can reach httpd, Ironic and the Inspector API on the host
for port in 5050 $HTTP_PORT 6385 ; do
    if ! $IPTABLES -C INPUT -i $PROVISIONING_INTERFACE -p tcp -m tcp --dport $port -j ACCEPT > /dev/null 2>&1; then
        $IPTABLES -I INPUT -i $PROVISIONING_INTERFACE -p tcp -m tcp --dport $port -j ACCEPT
    fi
done

podman run -d --net host --name ironic \
     --restart on-failure \
     --env IRONIC_RAMDISK_SSH_KEY \
     --env PROVISIONING_INTERFACE \
     --env OS_CONDUCTOR__HEARTBEAT_TIMEOUT=120 \
     --env IRONIC_HTPASSWD \
     --env INSPECTOR_HTPASSWD=${IRONIC_HTPASSWD} \
     --env IRONIC_KERNEL_PARAMS \
     --env HTTP_PORT \
     --entrypoint /bin/runironic \
     -v $AUTH_DIR:/auth:z,ro \
     -v $IRONIC_SHARED_VOLUME:/shared:z ${IRONIC_IMAGE}

podman run -d --net host --name ironic-inspector \
     --restart on-failure \
     --env PROVISIONING_INTERFACE \
     --env IRONIC_HTPASSWD \
     --env INSPECTOR_HTPASSWD=${IRONIC_HTPASSWD} \
     --env IRONIC_KERNEL_PARAMS \
     --env HTTP_PORT \
     --entrypoint /bin/runironic-inspector \
     -v $AUTH_DIR:/auth:z,ro \
     -v $IRONIC_SHARED_VOLUME:/shared:z "${IRONIC_IMAGE}"
